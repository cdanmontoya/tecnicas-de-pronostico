panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)',
xlim = c(fechas[1 + 12*year], fechas[12 + 12*year])
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
install.packages("forecast")
# Instalación de librerías
install.packages("readxl")
library(forecast)
library(forecast)
# Cargar librerías
library(readxl)
library(pastecs)
library(forecast)
# Instalación de librerías
install.packages("readxl")
install.packages("pastecs")
install.packages("forecast")
# Instalación de librerías
install.packages("readxl")
install.packages("pastecs")
install.packages("forecast")
# Instalación de librerías
# Cargar librerías
library(readxl)
library(pastecs)
library(forecast)
library(forecast)
install.packages(forecast)
install.packages("forecast")
library(forecast)
library("forecast")
install.packages("forecast")
library("forecast")
install.packages("forecast", dependencies = FALSE)
install.packages("tseries")
library(forecast)
# Cargar librerías
library(readxl)
library(pastecs)
library(forecast)
library(forecast)
install.packages("forecast")
install.packages("forecast")
dnf install curl
install.packages("forecast")
# Instalación de librerías
library(forecast)
setwd("~/Documents/unal/tecnicas-de-pronostico")
datos <- read_excel("precio.naranja.usa.ciudades.xls", skip = 10)
colnames(datos)[1] ="fecha"
colnames(datos)[2] ="precio"
np = nrow(datos)
#-----------------------convierte fecha a formato de R
fechas = as.Date(datos$fecha,format="%Y/%m/%d")
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.anio = seq(fechas[1],fechas[np],"years")
plot(
fechas,
datos$precio,
xaxt="n",
panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)'
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
n = length(datos$precio)
x = seq(1,n)
datos.precio_imputado = regul(
x,
y=datos$precio,
xmin=min(x),
n=length(x),
units="months",
deltat=1,
methods="spline",
rule=2,
f=0.5,
periodic=FALSE,
window=(max(x) - min(x))/(n - 1),
split=100,
specs=NULL
)
layout(1:2)
ts.plot(datos$precio, ylab="original")
ts.plot(datos.precio_imputado$y$Series,ylab="imputada")
year = 25
plot(
fechas,
datos.precio_imputado$y$Series,
xaxt="n",
panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)',
xlim = c(fechas[1 + 12*year], fechas[12 + 12*year])
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
y = datos.precio_imputado$y$Series
y = ts(datos.precio_imputado$y$Series, frequency=12)
ts.plot(y)
y = ts(datos.precio_imputado$y$Series, frequency=12)
t = seq(1, length(y))
It = seasonaldummy(y)
mod1 = lm(y ~ t + It)
summary(mod1)
mod1 = lm(y ~ t + t^2 + It)
summary(mod1)
mod1 = lm(y ~ t + t*t + It)
summary(mod1)
yhat = mod1$fitted.values
yhat
yhat[6]
yhat[1]
mod1 = lm(y ~ t + It)
source('medidas.R')
source("medidas.R")
source("medidas.yest.R")
setwd("~/Documents/unal/tecnicas-de-pronostico")
source("medidas.r")
source("medidas.yest.r")
datos <- read_excel("precio.naranja.usa.ciudades.xls", skip = 10)
colnames(datos)[1] ="fecha"
colnames(datos)[2] ="precio"
np = nrow(datos)
#-----------------------convierte fecha a formato de R
fechas = as.Date(datos$fecha,format="%Y/%m/%d")
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.anio = seq(fechas[1],fechas[np],"years")
plot(
fechas,
datos$precio,
xaxt="n",
panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)'
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
mod1 = lm(y ~ t + t^2 + It)
medidas(mod1, y, 3)
mod1 = lm(y ~ t + t^2 + t^3 + It)
yhat = mod1$fitted.values
yhat[1]
mod1 = lm(y ~ t + t^2 + It)
medidas(mod1, y, 3)
mod2 = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2, y, 3)
summary(mod2)
It.trig = fourier(y, 1)
mod1_trig = lm(y ~ t + t^2 + It.trig)
medidas(mod1_trig, y, 3)
mod2 = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2, y, 3)
mod2_trig = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2_trig, y, 3)
mod2 = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2, y, 3)
mod2_trig = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2_trig, y, 3)
mod2_trig = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2_trig, y, 3)
mod2_trig = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2_trig, y, 3)
mod1 = lm(y ~ t + t^2 + It)
medidas(mod1, y, 3)
mod1_trig = lm(y ~ t + t^2 + It.trig)
medidas(mod1_trig, y, 3)
T = length(y)
yi = y[1:(T-12)]
yf = y[(T-12+1):T]
mod.cuadratico = lm(y ~ t + t^2 + It)
mod.cuadratico_trig = lm(y ~ t + t^2 + It.trig)
mod.cubico = lm(y ~ t + t^2 + t^3 + It)
mod.cubico_trig = mod2_trig = lm(y ~ t + t^2 + t^3 + It)
mod.cuadratico = lm(y ~ t + t^2 + It)
mod.cuadratico_trig = lm(y ~ t + t^2 + It.trig)
mod.cubico = lm(y ~ t + t^2 + t^3 + It)
mod.cubico_trig = mod2_trig = lm(y ~ t + t^2 + t^3 + It)
y = ts(datos.precio_imputado$y$Series, frequency=12)
t = seq(1, length(y))
It = seasonaldummy(y)
It.trig = fourier(y, 1)
# Instalación de librerías
install.packages("readxl")
install.packages("pastecs")
install.packages("forecast")
setwd("~/Documents/unal/tecnicas-de-pronostico")
# Cargar librerías
library(readxl)
library(pastecs)
library(forecast)
source("medidas.r")
source("medidas.yest.r")
datos <- read_excel("precio.naranja.usa.ciudades.xls", skip = 10)
colnames(datos)[1] ="fecha"
colnames(datos)[2] ="precio"
np = nrow(datos)
#-----------------------convierte fecha a formato de R
fechas = as.Date(datos$fecha,format="%Y/%m/%d")
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.anio = seq(fechas[1],fechas[np],"years")
plot(
fechas,
datos$precio,
xaxt="n",
panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)'
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
n = length(datos$precio)
x = seq(1,n)
datos.precio_imputado = regul(
x,
y=datos$precio,
xmin=min(x),
n=length(x),
units="months",
deltat=1,
methods="spline",
rule=2,
f=0.5,
periodic=FALSE,
window=(max(x) - min(x))/(n - 1),
split=100,
specs=NULL
)
layout(1:2)
ts.plot(datos$precio, ylab="original")
ts.plot(datos.precio_imputado$y$Series,ylab="imputada")
year = 25
plot(
fechas,
datos.precio_imputado$y$Series,
xaxt="n",
panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)',
xlim = c(fechas[1 + 12*year], fechas[12 + 12*year])
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
y = ts(datos.precio_imputado$y$Series, frequency=12)
t = seq(1, length(y))
It = seasonaldummy(y)
It.trig = fourier(y, 1)
mod.cuadratico = lm(y ~ t + t^2 + It)
medidas(mod1, y, 3)
mod.cuadratico_trig = lm(y ~ t + t^2 + It.trig)
medidas(mod1_trig, y, 3)
mod.cubico = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2, y, 3)
mod.cubico_trig = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2_trig, y, 3)
mod.crossvalidation.cuadratico = lm(y ~ t + t^2 + It)
# Ajustar modelos
mod.crossvalidation.cuadratico = lm(y ~ t + t^2 + It)
mod.crossvalidation.cubico = lm(yi ~ t + t^2 + It)
# Ajustar modelos
mod.crossvalidation.cuadratico = lm(y ~ t + t^2 + It)
mod.crossvalidation.cubico = lm(yi ~ t + t^2 + t^3 + It)
# Ajustar modelos
mod.crossvalidation.cuadratico = lm(y ~ t + t^2 + It)
mod.crossvalidation.cubico = lm(y ~ t + t^2 + t^3 + It)
mod.cuadratico = lm(y ~ t + t^2 + It)
medidas(mod1, y, 3)
summary(mod.cuadratico)
mod.cubico = lm(y ~ t + t^2 + t^3 + It)
medidas(mod2, y, 3)
summary(mod.cubico)
t2 = t^2
mod.cuadratico = lm(y ~ t + t2 + It)
medidas(mod1, y, 3)
summary(mod.cuadratico)
y = ts(datos.precio_imputado$y$Series, frequency=12)
t = seq(1, length(y))
t2 = t^2
t3 = t^3
It = seasonaldummy(y)
It.trig = fourier(y, 1)
mod.cuadratico = lm(y ~ t + t2 + It)
medidas(mod1, y, 3)
summary(mod.cuadratico)
mod.cuadratico_trig = lm(y ~ t + t2 + It.trig)
medidas(mod1_trig, y, 3)
mod.cuadratico_trig = lm(y ~ t + t2 + It.trig)
medidas(mod1_trig, y, 3)
mod.cubico = lm(y ~ t + t2 + t3 + It)
medidas(mod2, y, 3)
summary(mod.cubico)
# Ajustar modelos
mod.crossvalidation.cuadratico = lm(y ~ t + t2 + It)
mod.crossvalidation.cubico = lm(y ~ t + t2 + t3 + It)
# Ajustar modelos
mod.crossvalidation.cuadratico = lm(y ~ t + t2 + It)
mod.crossvalidation.cubico = lm(y ~ t + t2 + t3 + It)
M.cuadratico = medidas(mod.crossvalidation.cuadratico)
# Ajustar modelos
mod.crossvalidation.cuadratico = lm(y ~ t + t2 + It)
mod.crossvalidation.cubico = lm(y ~ t + t2 + t3 + It)
M.cuadratico = medidas(mod.crossvalidation.cuadratico, yi, 3)
M.cubico = medidas(mod.crossvalidation.cubico, yi, 4)
M
M = cbind(M.cuadratico, M.cubico)
M
mod.cuadratico = lm(y ~ t + t2 + It)
M.cuadratico = medidas(mod1, y, 3)
summary(mod.cuadratico)
mod.cuadratico_trig = lm(y ~ t + t2 + It.trig)
M.cuadratico_trig = medidas(mod1_trig, y, 3)
mod.cubico = lm(y ~ t + t2 + t3 + It)
M.cubico = medidas(mod2, y, 3)
summary(mod.cubico)
M = cbind(M.cuadratico, M.cubico)
M = cbind(M.cuadratico, M.cubico)
M
tt = seq((T-12+1), T, 1)
tt2 = tt^2
tt
tt2
pr = mat.or.vec(length(tt), 2)
pr[,1] = predict(mod.cuadratico, data.frame(t=tt, t2=tt2))
pr[,1] = predict(mod.cuadratico, data.frame(t=tt, t2=tt2, It=It))
pr[,1] = predict(mod.cuadratico, data.frame(t=tt, t2=tt2))
pr[,1] = predict(mod.cuadratico, data.frame(t=tt, t2=tt2, It=It))
length(tt)
length(tt2)
pr[,1] = predict(mod.crossvalidation.cuadratico, data.frame(t=tt, t2=tt2, It=It))
# Ajustar modelos
mod.cuadratico = lm(y ~ t + t2 + It)
mod.cubico = lm(y ~ t + t2 + t3 + It)
T = length(y)
yi = y[1:(T-12)]
yf = y[(T-12+1):(T-12)]
# Ajustar modelos
mod.cuadratico = lm(y ~ t + t2 + It)
mod.cubico = lm(y ~ t + t2 + t3 + It)
M.cuadratico = medidas(mod.crossvalidation.cuadratico, yi, 3)
M.cubico = medidas(mod.crossvalidation.cubico, yi, 4)
M = cbind(M.cuadratico, M.cubico)
M
tt = seq((T-12+1), T, 1)
tt2 = tt^2
pr = mat.or.vec(length(tt), 2)
pr[,1] = predict(mod.cuadratico, data.frame(t=tt, t2=tt2, It=It))
length(It)
sqrt(5764)
5764/5764
5764 / 524
pr[,3]
pr[,2]
data.frame(t = tt, t2 = tt2, t3 = tt3, It = It)
data.frame(t = tt, t2 = tt2, It = It)
setwd("~/Documents/unal/tecnicas-de-pronostico")
# Cargar librerías
library(readxl)
library(pastecs)
library(forecast)
source("medidas.r")
source("medidas.yest.r")
datos <- read_excel("precio.naranja.usa.ciudades.xls", skip = 10)
colnames(datos)[1] ="fecha"
colnames(datos)[2] ="precio"
np = nrow(datos)
#-----------------------convierte fecha a formato de R
fechas = as.Date(datos$fecha,format="%Y/%m/%d")
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.anio = seq(fechas[1],fechas[np],"years")
plot(
fechas,
datos$precio,
xaxt="n",
panel.first = grid(),
type='l',
lwd=2,
ylab='Costo promedio ($USD)'
)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.anio, labels = FALSE, tcl = -0.2)
n = length(datos$precio)
x = seq(1,n)
datos.precio_imputado = regul(
x,
y=datos$precio,
xmin=min(x),
n=length(x),
units="months",
deltat=1,
methods="spline",
rule=2,
f=0.5,
periodic=FALSE,
window=(max(x) - min(x))/(n - 1),
split=100,
specs=NULL
)
layout(1:2)
ts.plot(datos$precio, ylab="original")
ts.plot(datos.precio_imputado$y$Series,ylab="imputada")
T = length(y)
y = ts(datos.precio_imputado$y$Series, frequency=12)
t = seq(1, length(y))
t2 = t^2
t3 = t^3
It = seasonaldummy(y)
It.trig = fourier(y, 1)
T = length(y)
yi = y[1:(T-12)]
yf = y[(T-12+1):(T-12)]
# Ajustar modelos
mod.cuadratico = lm(y ~ t + t2 + It)
mod.cubico = lm(y ~ t + t2 + t3 + It)
M.cuadratico = medidas(mod.crossvalidation.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cubico = medidas(mod.cubico, yi, 4)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cubico = medidas(mod.cubico, yi, 4)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cubico = medidas(mod.cubico, yi, 4)
M = cbind(M.cuadratico, M.cubico)
M
tt = seq((T-12+1), T, 1)
tt2 = tt^2
pr = mat.or.vec(length(tt), 2)
pr[,1] = predict(mod.cuadratico, data.frame(t=tt, t2=tt2, It=It))
T
T-12+1
tt
data.frame(t=tt, t2=tt2, It=It)
data.frame(t=tt, t2=tt2)
predict(mod.cuadratico, data.frame(t=tt, t2=tt2))
predict(mod.cuadratico, data.frame(t=tt, t2=tt2, It=seq(1, 12)))
It
forecast(mod.cuadratico, data.frame(t=tt, t2=tt2, It=It))
library(xtable)
install.packages("xtable")
# Instalación de librerías
library(xtable)
print(xtable(mod.cuadratico))
mod.cuadratico$coefficients
mod.cuadratico$residuals
mod.cuadratico$fitted.values
mod.cuadratico$call
seasonaldummy
Itf = seasonaldummy(yi,m)
T = length(y)
yi = y[1:(T-12)]
yf = y[(T-12+1):(T-12)]
Itf = seasonaldummy(yi,m)
T = length(y)
yi = ts(y[1:(T-12)], frequency = 12)
yf = ts(y[(T-12+1):(T-12)], frequency = 12)
Itf = seasonaldummy(yi, 12)
ti = seq(1,length(yi))
m = 12
T = length(y)
yi = ts(y[1:(T-m)], frequency = m)
ti = seq(1,length(yi))
yf = ts(y[(T-m+1):(T-m)], frequency = m)
tf = seq(T+1,T+m,1)
Itf = seasonaldummy(yi, m)
predict(mod.cuadratico, data.frame(t=tt, t2 = tt2, It= Itf))
Xtf = cbind(rep(1,m),tf,tf2,Itf)
m = 12
T = length(y)
yi = ts(y[1:(T-m)], frequency = m)
ti = seq(1,length(yi))
yf = ts(y[(T-m+1):(T-m)], frequency = m)
tf = seq(T+1,T+m,1)
tf2 = tf^2
Itf = seasonaldummy(yi, m)
# Ajustar modelos
mod.cuadratico = lm(y ~ t + t2 + It)
mod.cubico = lm(y ~ t + t2 + t3 + It)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cubico = medidas(mod.cubico, yi, 4)
M = cbind(M.cuadratico, M.cubico)
M
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M.cuadratico = medidas(mod.cuadratico, yi, 3)
M = cbind(M.cuadratico, M.cubico)
M
Xtf = cbind(rep(1,m),tf,tf2,Itf)
predict(mod.cuadratico, data.frame(Xt = I(Xtf)))
